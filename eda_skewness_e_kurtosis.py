# -*- coding: utf-8 -*-
"""EDA - skewness e kurtosis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KfGDEDkI-aLTK2INnLZUKO2d6fxVUrg7

**Skewness** e **kurtosis** são duas medidas importantes para entender a forma de uma distribuição de dados. Vamos explorar cada uma delas:

1. **Skewness (Assimetria)**:
   - A **skewness** mede o grau de assimetria de uma distribuição de dados.
   - Se visualizarmos os dados usando um histograma ou uma curva de frequência, a skewness indica qual lado da distribuição está mais esticado ou alongado em relação ao outro e qual lado possui uma cauda.
   - Existem três tipos de skewness:
     - **Skewness Positiva (Assimetria à Direita)**: A cauda direita (valores maiores) é mais longa do que a cauda esquerda (valores menores). A média é maior que a mediana.
     - **Skewness Negativa (Assimetria à Esquerda)**: A cauda esquerda (valores menores) é mais longa do que a cauda direita (valores maiores). A média é menor que a mediana.
     - **Sem Skewness**: A distribuição é simétrica. Isso não necessariamente significa que a distribuição é "normal".

2. **Kurtosis (Curtose)**:
   - A **kurtosis** quantifica a altura do pico e a espessura das caudas de uma distribuição de dados.
   - Pode ser positiva (pico mais alto que o normal) ou negativa (pico mais baixo que o normal).
   - Uma kurtosis de zero indica uma distribuição normal.

3. **Importância no Aprendizado de Máquina**:
   - A skewness e a kurtosis podem afetar as suposições dos modelos de aprendizado de máquina e a precisão das previsões.
   - Por exemplo, algoritmos como regressão linear assumem normalidade nos resíduos, e a presença de skewness pode violar essa suposição.
   - Compreender a forma da distribuição ajuda a escolher o modelo apropriado e a aplicar transformações nos dados quando necessário.
"""

import pandas as pd
import numpy as np
import scipy.stats.stats as st
hg = np.array([1.46, 1.79, 2.01, 1.75, 1.56, 1.69, 1.88, 1.76, 1.88, 1.78])
myskew = st.skew (hg)
print (myskew)

import pandas as pd
import numpy as np
import scipy.stats.stats as st
hg = np.array([1.46, 1.79, 2.01, 1.75, 1.56, 1.69, 1.88, 1.76, 1.88, 1.78])
mykurt = st.kurtosis (hg)
print (mykurt)

import pandas as pd
import numpy as np
import scipy.stats.stats as st
hg1 = np.array([4,5,4,5,4])
myskew1 = st.skew (hg1)
print (myskew1)

import numpy as np
from scipy.stats import skew

# Gerar um conjunto de dados aleatórios (normalmente distribuídos)
x = np.linspace(-5, 5, 1000)
y = 1. / (np.sqrt(2. * np.pi)) * np.exp(-0.5 * (x) ** 2)  # Distribuição normal

# Calcular a skewness
skewness = skew(y)

print(f"A skewness do conjunto de dados é: {skewness:.4f}")


# Plot da distribuição normal
plt.plot(x, y, '*')
plt.title("Distribuição Normal")
plt.show()

import numpy as np
from scipy.stats import kurtosis
import matplotlib.pyplot as plt

# Gerar uma distribuição normal
x = np.linspace(-5, 5, 1000)
y = 1. / (np.sqrt(2. * np.pi)) * np.exp(-0.5 * (x) ** 2)  # Distribuição normal

# Calcular a kurtosis
kurt = kurtosis(y)

print(f"A kurtosis da distribuição normal é: {kurt:.4f}")

# Plot da distribuição normal
plt.plot(x, y, '*')
plt.title("Distribuição Normal")
plt.show()

from sklearn.datasets import load_iris
from scipy.stats import kurtosis

# Carregar o conjunto de dados Iris
iris = load_iris()
iris_data = iris.data

# Calcular a kurtosis para cada característica do conjunto de dados Iris
kurtosis_features = kurtosis(iris_data, axis=0, fisher=True)

# Exibir a kurtosis para cada característica
feature_names = iris.feature_names
print("Kurtosis para cada característica do conjunto de dados Iris:")
for i, feature in enumerate(feature_names):
    print(f"{feature}: {kurtosis_features[i]:.4f}")

"""Isso calculará a kurtosis para cada característica (sepal length, sepal width, petal length e petal width) no conjunto de dados Iris. A kurtosis é uma medida da forma da distribuição, indicando o pico e a espessura das caudas. Valores próximos a zero indicam uma distribuição normal."""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from scipy.stats import kurtosis

# Carregar o conjunto de dados Iris
iris = load_iris()
iris_data = iris.data
iris_target = iris.target

# Calcular a kurtosis para cada característica do conjunto de dados Iris
kurtosis_values = kurtosis(iris_data, axis=0)

# Nomes das características para o eixo x do gráfico
feature_names = iris.feature_names

# Criar o gráfico de barras
plt.figure(figsize=(10, 6))
plt.bar(feature_names, kurtosis_values, color='skyblue')

# Adicionar título e rótulos aos eixos
plt.title('Kurtosis das Características do Conjunto de Dados Iris')
plt.xlabel('Características')
plt.ylabel('Kurtosis')

# Mostrar o gráfico
plt.show()

"""Neste gráfico, cada barra representa a kurtosis para uma das quatro características do conjunto de dados Iris: sepal length (comprimento da sépala), sepal width (largura da sépala), petal length (comprimento da pétala) e petal width (largura da pétala). A kurtosis nos ajuda a entender a forma das distribuições dessas características.

Lembre-se de que a kurtosis é uma medida da forma da distribuição, indicando o pico e a espessura das caudas. Valores próximos a zero indicam uma distribuição normal.

A **kurtosis** está relacionada à frequência de **outliers** (valores extremamente altos ou baixos) em uma distribuição de dados. Vamos explorar essa relação:

- **Kurtosis**:
  - A kurtosis mede a **afinidade da cauda** de uma distribuição.
  - Ela indica o quão frequentes são os valores extremos (outliers) em relação à média.
  - Valores de kurtosis podem ser positivos, negativos ou zero.

- **Tipos de Kurtosis**:
  1. **Mesocúrtica**:
     - Distribuições com kurtosis média.
     - Outliers não são muito frequentes nem muito raros.
     - Exemplo: Peso ao nascer de bebês.
  2. **Platicúrtica**:
     - Distribuições com baixa kurtosis (caudas finas).
     - Outliers são muito raros.
     - Exemplo: Distribuição uniforme.
  3. **Leptocúrtica**:
     - Distribuições com alta kurtosis (caudas grossas).
     - Outliers são mais frequentes.
     - Exemplo: Distribuição normal.
"""